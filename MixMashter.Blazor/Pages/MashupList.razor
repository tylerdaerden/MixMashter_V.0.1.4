@page "/mashups"
@using MixMashter = MixMashter.Models.DTOs
@using MixMashter.Blazor.Services
@inject MashupApiService MashupService
@inject IJSRuntime JS

<h3>Mashups</h3>

@if (mashups == null)
{
    <p><em>Chargement...</em></p>
}
else if (!mashups.Any())
{
    <p>Aucun mashup disponible.</p>
}
else
{
    <div class="row">
        @foreach (var mashup in mashups)
        {
            <div class="card col-4 m-2 p-2 shadow-sm">
                <img src="@mashup.CoverImage" class="card-img-top" alt="cover" />

                <div class="card-body">
                    <h5 class="card-title">@mashup.Title</h5>
                    <p class="card-text">@mashup.Description</p>

                    @if (!string.IsNullOrEmpty(mashup.UrlLink) &&
                                (mashup.UrlLink.Contains("youtube.com") || mashup.UrlLink.Contains("youtu.be")))
                    {
                        <!-- ✅ Intégration YouTube sécurisée -->
                        <iframe width="100%" height="200"
                                src="@($"https://www.youtube.com/embed/{ExtractYouTubeId(mashup.UrlLink)}")"
                                frameborder="0"
                                sandbox="allow-same-origin allow-scripts allow-popups"
                                referrerpolicy="no-referrer"
                                allowfullscreen>
                        </iframe>
                    }
                    else if (!string.IsNullOrEmpty(mashup.UrlLink) &&
                    (mashup.UrlLink.EndsWith(".mp3") || mashup.UrlLink.EndsWith(".wav")))
                    {
                        <!-- ✅ Lecteur audio natif -->
                        <audio controls style="width:100%">
                            <source src="@mashup.UrlLink" type="audio/mpeg" />
                            Votre navigateur ne supporte pas l’audio HTML5.
                        </audio>
                    }
                    else if (!string.IsNullOrEmpty(mashup.UrlLink))
                    {
                        <!-- ✅ Fallback bouton Play -->
                        <button class="btn btn-primary" @onclick="() => Play(mashup.UrlLink)">
                            ▶ Lire
                        </button>
                    }
                    else
                    {
                        <p class="text-muted"><em>Aucun média disponible</em></p>
                    }
                </div>
            </div>
        }
    </div>
}

<audio id="audioPlayer" controls style="width:100%;" hidden></audio>

@code {
    private List<MixMashter.MashupReadDto>? mashups;

    protected override async Task OnInitializedAsync()
    {
        mashups = (await MashupService.GetAllAsync())?.ToList();
    }

    private async Task Play(string url)
    {
        await JS.InvokeVoidAsync("playAudio", url);
    }

    private string ExtractYouTubeId(string url)
    {
        if (string.IsNullOrEmpty(url)) return "";

        if (url.Contains("youtu.be/"))
        {
            return url.Split("youtu.be/").Last().Split('?').First();
        }
        if (url.Contains("watch?v="))
        {
            return url.Split("watch?v=").Last().Split('&').First(); // ✅ coupe tout après le &
        }
        return "";
    }
}
